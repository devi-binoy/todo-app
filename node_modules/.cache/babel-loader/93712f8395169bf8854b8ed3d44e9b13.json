{"ast":null,"code":"var _jsxFileName = \"/Users/debi/Desktop/todo-app/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoFrom from './TodoFrom';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id == todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id == id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Let's Get Some Things Done!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoFrom, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/debi/Desktop/todo-app/src/components/TodoList.js"],"names":["React","useState","TodoFrom","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EACA;AACI;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GATD;;AAWA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAG,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAArB,EACA;AACI;AACH;;AAEDH,IAAAA,QAAQ,CAACS,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,IAAWL,MAAX,GAAoBC,QAApB,GAA+BG,IAAjD,CAAT,CAAR;AACD,GAPD;;AASA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACrB,UAAME,SAAS,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAkBb,IAAI,IAAIA,IAAI,CAACU,EAAL,KAAWA,EAArC,CAAlB;AAEAZ,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AACvB,QAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAN,CAAUR,IAAI,IAAI;AACjC,UAAGA,IAAI,CAACU,EAAL,IAAWA,EAAd,EAAkB;AACdV,QAAAA,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;AACH;;AACD,aAAOhB,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACiB,YAAD,CAAR;AACH,GARD;;AAUA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AACA,MAAA,KAAK,EAAIF,KADT;AAEA,MAAA,YAAY,EAAIiB,YAFhB;AAGA,MAAA,UAAU,EAAEH,UAHZ;AAIA,MAAA,UAAU,EAAEP;AAJZ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYD;;GApDQR,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport TodoFrom from './TodoFrom';\nimport Todo from './Todo';\n\nfunction TodoList() {\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n      if(!todo.text || /^\\s*$/.test(todo.text))\n      {\n          return;\n      }\n\n      const newTodos = [todo, ...todos]\n\n      setTodos(newTodos)\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if(!newValue.text || /^\\s*$/.test(newValue.text))\n    {\n        return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id == todoId ? newValue : item)));\n  }\n\n  const removeTodo = id => {\n      const removeArr = [...todos].filter(todo => todo.id !==id);\n\n      setTodos(removeArr);\n  }\n\n  const completeTodo = id => {\n      let updatedTodos = todos.map(todo => {\n          if(todo.id == id) {\n              todo.isComplete = !todo.isComplete\n          }\n          return todo;\n      });\n      setTodos(updatedTodos);\n  }\n  \n  return (\n  <div>\n      <h1>Let's Get Some Things Done!</h1>\n      <TodoFrom onSubmit={addTodo}/>\n      <Todo \n      todos = {todos}\n      completeTodo = {completeTodo}\n      removeTodo={removeTodo}\n      updateTodo={updateTodo}\n      />\n  </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}