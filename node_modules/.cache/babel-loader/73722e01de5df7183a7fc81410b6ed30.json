{"ast":null,"code":"import _slicedToArray from\"/Users/debi/Desktop/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import TodoForm from'./TodoForm';import{MdDelete}from'react-icons/md';import{TiEdit}from'react-icons/ti';import{IoMdCheckmarkCircle}from'react-icons/io';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Todo=function Todo(_ref){var todos=_ref.todos,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo,updateTodo=_ref.updateTodo;var _useState=useState({id:null,value:''}),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var submitUpdate=function submitUpdate(value){updateTodo(edit.id,value);setEdit({id:null,value:''});};if(edit.id){return/*#__PURE__*/_jsx(TodoForm,{edit:edit,onSubmit:submitUpdate});}return todos.map(function(todo,index){return/*#__PURE__*/_jsxs(\"div\",{className:todo.isComplete?'todo-row complete':'todo-row',children:[/*#__PURE__*/_jsx(\"div\",{children:todo.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"icons\",children:[/*#__PURE__*/_jsx(IoMdCheckmarkCircle,{onClick:function onClick(){return completeTodo(todo.id);},className:\"done-icon\"}),/*#__PURE__*/_jsx(MdDelete,{onClick:function onClick(){return removeTodo(todo.id);},className:\"delete-icon\"}),/*#__PURE__*/_jsx(TiEdit,{onClick:function onClick(){return setEdit({id:todo.id,value:todo.text});},className:\"edit-icon\"})]})]},index);});};export default Todo;","map":{"version":3,"sources":["/Users/debi/Desktop/todo-app/src/Todo.js"],"names":["React","useState","TodoForm","MdDelete","TiEdit","IoMdCheckmarkCircle","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"mappings":"kHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAAQC,mBAAR,KAAkC,gBAAlC,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqD,IAAlDC,CAAAA,KAAkD,MAAlDA,KAAkD,CAA3CC,YAA2C,MAA3CA,YAA2C,CAA7BC,UAA6B,MAA7BA,UAA6B,CAAjBC,UAAiB,MAAjBA,UAAiB,CAChE,cAAwBT,QAAQ,CAAC,CAC/BU,EAAE,CAAE,IAD2B,CAE/BC,KAAK,CAAE,EAFwB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAI,CAC5BF,UAAU,CAACG,IAAI,CAACF,EAAN,CAAUC,KAAV,CAAV,CACAE,OAAO,CAAC,CACNH,EAAE,CAAE,IADE,CAENC,KAAK,CAAE,EAFD,CAAD,CAAP,CAID,CAND,CAQA,GAAIC,IAAI,CAACF,EAAT,CAAa,CACX,mBAAO,KAAC,QAAD,EAAU,IAAI,CAAEE,IAAhB,CAAsB,QAAQ,CAAEE,YAAhC,EAAP,CACD,CAED,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACf,aACE,SAAS,CAAED,IAAI,CAACE,UAAL,CAAkB,mBAAlB,CAAwC,UADrD,wBAIE,qBACGF,IAAI,CAACG,IADR,EAJF,cAOE,aAAK,SAAS,CAAC,OAAf,wBAEA,KAAC,mBAAD,EACK,OAAO,CAAE,yBAAMZ,CAAAA,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB,EADd,CAEI,SAAS,CAAG,WAFhB,EAFA,cAOE,KAAC,QAAD,EACE,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB,EADX,CAEE,SAAS,CAAC,aAFZ,EAPF,cAYE,KAAC,MAAD,EACE,OAAO,CAAE,yBAAMG,CAAAA,OAAO,CAAC,CAAEH,EAAE,CAAEM,IAAI,CAACN,EAAX,CAAeC,KAAK,CAAEK,IAAI,CAACG,IAA3B,CAAD,CAAb,EADX,CAEE,SAAS,CAAC,WAFZ,EAZF,GAPF,GAEOF,KAFP,CADe,EAAV,CAAP,CA2BD,CA7CD,CA+CA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { MdDelete } from 'react-icons/md';\nimport { TiEdit } from 'react-icons/ti';\nimport {IoMdCheckmarkCircle} from 'react-icons/io'\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div >\n        {todo.text}\n      </div>\n      <div className='icons'>\n\n      <IoMdCheckmarkCircle\n           onClick={() => completeTodo(todo.id)}\n          className = 'done-icon'\n        />\n\n        <MdDelete\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        \n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}