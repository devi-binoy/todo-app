{"ast":null,"code":"var _jsxFileName = \"/Users/debi/Desktop/todo-app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoFrom from './TodoFrom';\nimport TodoList from './TodoList';\nimport { FaEdit } from 'react-icons/fa';\nimport { AiFillCloseSquare } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row-complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(AiFillCloseSquare, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"Hw8V1EAdUHyuo0vLO8yFJ0ZhjIk=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/debi/Desktop/todo-app/src/components/Todo.js"],"names":["React","useState","TodoFrom","TodoList","FaEdit","AiFillCloseSquare","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAAUC,iBAAV,QAAmC,gBAAnC;;;AAEA,SAASC,IAAT,OAA6D;AAAA;;AAAA,MAA/C;AAACC,IAAAA,KAAD;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,GAA+C;AAEzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAC7BY,IAAAA,EAAE,EAAG,IADwB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;AAMA,SAAOP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AACK,IAAA,SAAS,EAAID,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAD1D;AAAA,4BAKI;AAAqB,MAAA,OAAO,EAAE,MAAMV,YAAY,CAACQ,IAAI,CAACH,EAAN,CAAhD;AAAA,gBACKG,IAAI,CAACG;AADV,OAAYH,IAAI,CAACH,EAAjB;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AACA,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAACO,IAAI,CAACH,EAAN,CADzB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AACA,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEG,IAAI,CAACH,EAAX;AAAeC,UAAAA,KAAK,EAAGE,IAAI,CAACG;AAA5B,SAAD,CADtB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,KAEYF,KAFZ;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAqBH;;GA7BQX,I;;KAAAA,I;AA+BT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport TodoFrom from './TodoFrom';\nimport TodoList from './TodoList';\nimport { FaEdit } from 'react-icons/fa';\nimport  { AiFillCloseSquare } from 'react-icons/ai';\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n\n    const [edit, setEdit] = useState({\n        id : null,\n        value: ''\n    })\n    \n\n    return todos.map((todo, index)=> (\n        <div \n             className = {todo.isComplete ? 'todo-row-complete' : 'todo-row'} \n             key = {index}\n        >\n\n            <div key = {todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n\n            <div className=\"icons\">\n                <AiFillCloseSquare \n                onClick={() => removeTodo(todo.id)}\n                className='delete-icon'/>\n                <FaEdit \n                onClick={() => setEdit({ id: todo.id, value : todo.text})}\n                className='edit-icon'/>\n            </div>\n        </div>\n\n    ))\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}